---
- name: Configures master server
  hosts: all
  become: true
  gather_facts: 'no'
  vars:
    openssl_private_key: /etc/openldap/certs/priv.pem
    openssl_certificate: /etc/openldap/certs/cert.pem
    # TODO: read the password from an environment variable
    admin_pass: '123456'
    users: '/root/users.ldif'
    seed_data: '/root/seed_data.ldif'
    bootstrap_data: '/root/db_bootstrap.ldif'
    migrate_bin: '/usr/local/sbin/migrate-passwd'
    log_dir: /var/log/openldap
    ldap_audit_log: '{{ log_dir }}/audit.log'
    ldap_log: /var/log/openldap.log
  tasks:
    - name: Copy resolver configuration
      ansible.builtin.copy:
        src: ../shared/resolv.conf
        dest: /etc/resolv.conf
        owner: root
        group: root
        mode: '0644'
    - name: Change Vagrant default NAT network (disable resolver configuration)
      ansible.builtin.copy:
        src: ../shared/ifcfg-eth0
        dest: /etc/sysconfig/network-scripts/ifcfg-eth0
        owner: root
        group: root
        mode: '0644'
    - name: Disable NetworkManager to not change resolver configuration
      ansible.builtin.systemd:
        name: NetworkManager.service
        state: stopped
        enabled: 'no'
    - name: Enabled DNS access from firewall
      ansible.builtin.command: firewall-cmd --permanent --add-service=ldap
    - name: Reload firewalld rules
      ansible.builtin.command: firewall-cmd --reload

    - name: Install packages
      yum:
        name:
          - openldap
          - openldap-clients
          - openldap-servers
          - migrationtools
          - python36-cryptography  # for Ansible community.crypto
        state: present
        update_cache: 'yes'

    - name: 'Create private key (RSA, 4096 bits)'
      community.crypto.openssl_privatekey:
        path: '{{ openssl_private_key }}'
    - name: Create certificate signing request (CSR) for self-signed certificate
      community.crypto.openssl_csr_pipe:
        privatekey_path: '{{ openssl_private_key }}'
        common_name: master.local.br
        organization_name: Foobar
        country_name: BR
        state_or_province_name: São Paulo
        locality_name: São Paulo
        email_address: glasswalk3r@yahoo.com.br
        organizational_unit_name: Training
      register: csr
    - name: Create self-signed certificate from CSR
      community.crypto.x509_certificate:
        path: '{{ openssl_certificate }}'
        csr_content: '{{ csr.csr }}'
        privatekey_path: '{{ openssl_private_key }}'
        provider: selfsigned
    - name: Fixing permissions for TLS certificate
      ansible.builtin.file:
        path: '{{ openssl_certificate }}'
        owner: ldap
        group: ldap
    - name: Fixing permissions for private key
      ansible.builtin.file:
        path: '{{ openssl_private_key }}'
        owner: ldap
        group: ldap
        mode: '0600'
    - name: Database configuration
      ansible.builtin.copy:
        src: /usr/share/openldap-servers/DB_CONFIG.example
        remote_src: 'yes'
        dest: /var/lib/ldap/DB_CONFIG
        owner: ldap
        group: ldap
        mode: '0644'
    - name: Testing the database configuration
      ansible.builtin.command: slaptest -u
    - name: Enabling the slapd daemon
      ansible.builtin.systemd:
        name: slapd.service
        state: started
        enabled: 'yes'

    - name: 'Testing if required schemas are in place (idempotence)'
      ansible.builtin.command: ldapsearch -LLL -Y EXTERNAL -H ldapi:/// -b cn={1}cosine,cn=schema,cn=config cn  # yamllint disable-line rule:line-length
      ignore_errors: 'yes'
      register: schema_search
    - name: Adding required LDAP schemas
      ansible.builtin.command: 'ldapadd -Y EXTERNAL -H ldapi:/// -D cn=config -f /etc/openldap/schema/{{ item }}'  # yamllint disable-line rule:line-length
      when: schema_search.rc == 32  # exit code for "no such object" error
      loop:
        - cosine.ldif
        - nis.ldif
        - inetorgperson.ldif
        - misc.ldif

    - name: Generate the hashed password for OpenLDAP manager
      ansible.builtin.command: 'slappasswd -s {{ admin_pass }}'
      register: manager_password
    - name: Create a bootstrap LDIF file with OpenLDAP manager password
      ansible.builtin.template:
        src: templates/db_bootstrap.ldif
        dest: '{{ bootstrap_data }}'
        owner: root
        group: root
        mode: '0400'
    - name: Loading bootstrap data
      ansible.builtin.command: 'ldapadd -Y EXTERNAL -H ldapi:/// -f {{ bootstrap_data }}'  # yamllint disable-line rule:line-length

    - name: Manage local user group
      ansible.builtin.group:
        name: it
        state: present

    - name: Manage Linux local users
      ansible.builtin.user:
        name: '{{ item["login"] }}'
        comment: '{{ item["fullname"] }},571,+551155422748,+551155422748'
        append: 'yes'
        create_home: 'yes'
        shell: /bin/bash
        state: present
        groups:
          - it
        password: '{{ item["password"] }}'
        password_expire_max: 365
        password_expire_min: 15
      loop:  # TODO: DRY for password
        - {"login": "marcos", "fullname": "Marcos Pitanga", "password": "$5$VACmpTmOAHpIVLqZ$HNj.0nxssyymqCO1ALZ4I6bFjDEOKGNmmK8ByaA9q10"}  # yamllint disable-line rule:line-length
        - {"login": "alves", "fullname": "Alves Silva", "password": "$5$VACmpTmOAHpIVLqZ$HNj.0nxssyymqCO1ALZ4I6bFjDEOKGNmmK8ByaA9q10"}  # yamllint disable-line rule:line-length
        - {"login": "arthur", "fullname": "Arthur Moura", "password": "$5$VACmpTmOAHpIVLqZ$HNj.0nxssyymqCO1ALZ4I6bFjDEOKGNmmK8ByaA9q10"}  # yamllint disable-line rule:line-length
        - {"login": "nathalia", "fullname": "Nathalia Lopes", "password": "$5$VACmpTmOAHpIVLqZ$HNj.0nxssyymqCO1ALZ4I6bFjDEOKGNmmK8ByaA9q10"}  # yamllint disable-line rule:line-length
        - {"login": "pinguim", "fullname": "Aptenodytes Forsteri", "password": "$5$VACmpTmOAHpIVLqZ$HNj.0nxssyymqCO1ALZ4I6bFjDEOKGNmmK8ByaA9q10"}  # yamllint disable-line rule:line-length

    - name: 'Testing if seed data is already in place (idempotence)'
      ansible.builtin.command: ldapsearch -Q -LLL -Y EXTERNAL -H ldapi:/// -b dc=local,dc=br 'objectclass=organizationalUnit'  # yamllint disable-line rule:line-length
      ignore_errors: 'yes'
      register: seed_data_check

    - block:
        - name: Copy seed data LDIF
          ansible.builtin.copy:
            src: 'files/seed_data.ldif'
            dest: '{{ seed_data }}'
            mode: '0400'

        - name: Load seed data into OpenLDAP
          ansible.builtin.command: 'ldapadd -x -w {{ admin_pass }} -D cn=Manager,dc=local,dc=br -f {{ seed_data }}'  # yamllint disable-line rule:line-length
      when: seed_data_check.rc == 32  # exit code for "no such object" error

    # - name: 'Testing if users are already in place (idempotence)'
    #   # TODO: DRY with parameters
    #   ansible.builtin.command: ldapsearch -LLL -Q -Y EXTERNAL -H ldapi:/// -b uid=pinguim,ou=People,dc=local,dc=br  # yamllint disable-line rule:line-length
    #   ignore_errors: 'yes'
    #   register: users_check
    #
    # - block:
    #     - name: Setup migrate-passwd
    #       ansible.builtin.copy:
    #         src: '../migration/migrate-passwd'
    #         dest: '{{ migrate_bin }}'
    #         mode: '0550'
    #     - name: Exports data from /etc/passwd and /etc/shadow
    #       ansible.builtin.command: '{{ migrate_bin }} -base-dn dc=local,dc=br -dns-domain local.br -save-to {{ users }}'  # yamllint disable-line rule:line-length
    #     - name: Load users into OpenLDAP
    #       ansible.builtin.command: 'ldapadd -x -w {{ admin_pass }} -D cn=Manager,dc=local,dc=br -f {{ users }}'  # yamllint disable-line rule:line-length
    #   # exit code for "no such object" error
    #   when: users_check.rc == 32

    - name: 'Testing if monitor access is already configured (idempotence)'
      ansible.builtin.command: ldapsearch -LLL -Y EXTERNAL -H ldapi:/// -b cn=config '(olcDatabase={1}monitor)' -Q  # yamllint disable-line rule:line-length
      ignore_errors: 'yes'
      register: monitor_access_check
    - block:
        - name: Monitor acess configuration
          ansible.builtin.copy:
            src: files/monitor.ldif
            dest: /root/monitor.ldif
            owner: ldap
            group: ldap
            mode: '0644'
        - name: apply LDIF
          ansible.builtin.command: ldapmodify -Y EXTERNAL -H ldapi:/// -f /root/monitor.ldif  # yamllint disable-line rule:line-length
      # exit code for "no such object" error
      when: monitor_access_check.rc == 32

    - name: Copy logging configuration for OpenLDAP
      ansible.builtin.copy:
        src: files/log_level.ldif
        dest: /root/log_level.ldif
        owner: root
        group: root
        mode: '0640'
    - name: Configure OpenLDAP logging level
      ansible.builtin.command: ldapmodify -Y EXTERNAL -H ldapi:/// -f /root/log_level.ldif  # yamllint disable-line rule:line-length
    - name: Add local4 support in rsyslog
      ansible.builtin.lineinfile:
        path: /etc/hosts
        regex: '\*.info;mail\.none;authpriv\.none;cron\.none(;local4\.none)?\s+/var/log/messages'  # yamllint disable-line rule:line-length
        line: '*.info;mail.none;authpriv.none;cron.none *.info;mail.none;authpriv.none;cron.none;local4.none'  # yamllint disable-line rule:line-length
        state: present
        owner: root
        group: root
        mode: '0644'
    - name: Configure rsyslog to accept OpenLDAP logging
      ansible.builtin.template:
        src: templates/rsyslog.conf
        dest: /etc/rsyslog.d/openldap.conf
        owner: root
        group: root
        mode: '0644'
    - name: Reloading the rsyslog daemon
      ansible.builtin.systemd:
        name: rsyslog.service
        state: restarted
        enabled: 'yes'
    - name: Configure logrotate for OpenLDAP logs
      ansible.builtin.template:
        src: templates/openldap_logrotate
        dest: /etc/logrotate.d/openldap
        owner: root
        group: root
        mode: '0644'

    - name: Copy audit configuration for LDAP operations
      ansible.builtin.copy:
        src: files/auditlog.ldif
        dest: /root/auditlog.ldif
        owner: root
        group: root
        mode: '0640'
    - name: Add audit configuration to OpenLDAP database
      ansible.builtin.command: ldapadd -Y EXTERNAL -H ldapi:/// -f /root/auditlog.ldif  # yamllint disable-line rule:line-length
      register: command_result
      failed_when:
        - command_result.rc != 0
        - command_result.rc != 80  # already loaded

    - name: Check if audit log is already configured
      ansible.builtin.command: ldapsearch -Q -LLL -Y EXTERNAL -H ldapi:/// -b 'olcOverlay={0}auditlog,olcDatabase={2}hdb,cn=config'  # yamllint disable-line rule:line-length
      ignore_errors: 'yes'
      register: audit_logging_check
    - block:
        - name: Create audit log directory
          ansible.builtin.file:
            path: '{{ log_dir }}'
            # TODO: create variable for DRY, also sharing with template
            owner: ldap
            group: ldap
            mode: '770'
            state: directory
        - name: Copy audit logging configuration
          ansible.builtin.template:
            src: templates/overlay-auditlog.ldif
            dest: /root/overlay-auditlog.ldif
            owner: root
            group: root
            mode: '0640'
        - name: Add audit logging configuration to OpenLDAP database
          ansible.builtin.command: ldapmodify -Y EXTERNAL -H ldapi:/// -f /root/overlay-auditlog.ldif  # yamllint disable-line rule:line-length
        - name: Configure logrotate for OpenLDAP audit logs
          ansible.builtin.template:
            src: templates/openldap_audit_logrotate
            dest: /etc/logrotate.d/openldap_audit
            owner: root
            group: root
            mode: '0644'
      # exit code for "no such object" error
      when: audit_logging_check.rc == 32

    - name: Check if memberOf and refInt are already configured
      ansible.builtin.command: ldapsearch -Q -LLL -Y EXTERNAL -H ldapi:/// -b 'olcOverlay={0}memberof,olcDatabase={2}hdb,cn=config'  # yamllint disable-line rule:line-length
      ignore_errors: 'yes'
      register: memberof_check
    - block:
        - name: Copy memberOf and refInt overlays configuration file
          ansible.builtin.copy:
            src: 'files/memberof_refint.ldif'
            dest: '/root/memberof_refint.ldif'
            owner: root
            group: root
            mode: '0440'
        - name: Add the configuration to OpenLDAP
          ansible.builtin.command: ldapadd -Y EXTERNAL -H ldapi:/// -f /root/memberof_refint.ldif  # yamllint disable-line rule:line-length
      # exit code for "no such object" error
      when: memberof_check.rc == 32
